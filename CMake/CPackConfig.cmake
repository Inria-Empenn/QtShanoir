#CPack config file
if(BUILD_PACKAGE)
  message(STATUS "Configuring CPack")
  if(WIN32)
    option(BUILD_PACKAGE_BINARY "Build runtime package" ON)
    option(BUILD_PACKAGE_SDK "Build development package" OFF)
    mark_as_advanced(BUILD_PACKAGE BUILD_PACKAGE_BINARY BUILD_PACKAGE_SDK)
  else(WIN32)
    if (APPLE)
      option(BUILD_PACKAGE_BINARY "Package binary distribution of QtShanoir" ON)
      option(BUILD_PACKAGE_SDK "Package development distribution of QtShanoir" OFF)
      mark_as_advanced(BUILD_PACKAGE BUILD_PACKAGE_BINARY BUILD_PACKAGE_SDK)
    else (APPLE) # For Linux
      option(BUILD_PACKAGE_DEBIAN "Build debian package" ON)
      option(BUILD_PACKAGE_RPM "Build rpm package" ON)
      option(BUILD_PACKAGE_BINARY "Package binary distribution of QtShanoir" ON)
      option(BUILD_PACKAGE_DEV "Package development distribution of QtShanoir" OFF)
      mark_as_advanced(BUILD_PACKAGE BUILD_PACKAGE_DEBIAN BUILD_PACKAGE_RPM BUILD_PACKAGE_BINARY BUILD_PACKAGE_DEV)
    endif (APPLE)
  endif(WIN32)
  
  set(BUILD_TESTING OFF)
  set(CPACK_GENERATOR "")
  set(CPACK_PACKAGE_NAME "qtshanoir")
  set(CPACK_PACKAGE_VERSION "${QTSHANOIR_VERSION_MAJOR}.${QTSHANOIR_VERSION_MINOR}.${QTSHANOIR_VERSION_PATCH}")
  set(CPACK_SOURCE_GENERATOR "TBZ2;ZIP")
  set(CPACK_PACKAGE_CONTACT "alexandre.abadie@irisa.fr")
  set(CPACK_PACKAGE_DESCRIPTION_FILE "${QTSHANOIR_SOURCE_DIR}/CMake/CPack.QtShanoirLicense.txt")
  set(CPACK_PACKAGE_DESCRIPTION_SUMMARY "QtShanoir provide Qt widgets for reading DICOM CD and communicating with DICOM PACS")
  set(CPACK_RESOURCE_FILE_LICENSE "${QTSHANOIR_SOURCE_DIR}/CMake/CPack.QtShanoirLicense.txt")
  set(CPACK_RESOURCE_FILE_README "${QTSHANOIR_SOURCE_DIR}/CMake/CPack.QtShanoirDescription.txt")
  set(CPACK_RESOURCE_FILE_WELCOME "${QTSHANOIR_SOURCE_DIR}/CMake/CPack.QtShanoirWelcome.txt")
  set(CPACK_PACKAGE_FILE_NAME "qtshanoir-${QTSHANOIR_VERSION_MAJOR}.${QTSHANOIR_VERSION_MINOR}.${QTSHANOIR_VERSION_PATCH}")
  set(CPACK_SOURCE_PACKAGE_FILE_NAME "qtshanoir-${QTSHANOIR_VERSION_MAJOR}.${QTSHANOIR_VERSION_MINOR}.${QTSHANOIR_VERSION_PATCH}-src")
  if(NOT WIN32)
#     set(CMAKE_INSTALL_PREFIX "/usr")
    set(CPACK_PACKAGING_INSTALL_PREFIX ${CMAKE_INSTALL_PREFIX})
    if(BUILD_PACKAGE_DEBIAN)
      include(${QTSHANOIR_SOURCE_DIR}/CMake/CPackDebConfig.cmake)
    endif(BUILD_PACKAGE_DEBIAN)
    if(BUILD_PACKAGE_RPM)
      include(${QTSHANOIR_SOURCE_DIR}/CMake/CPackRpmConfig.cmake)
    endif(BUILD_PACKAGE_RPM)
  else(NOT WIN32)
    if (APPLE)
      set(CPACK_GENERATOR PACKAGEMAKER)
    else (APPLE)
      include(${QTSHANOIR_SOURCE_DIR}/CMake/CPackNsisConfig.cmake)
    endif (APPLE)
  endif(NOT WIN32)
  include(CPack)
endif(BUILD_PACKAGE)
